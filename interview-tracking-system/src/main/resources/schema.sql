
-- ROLES
CREATE TABLE IF NOT EXISTS roles (
  id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(50) NOT NULL UNIQUE
);
-- USERS
CREATE TABLE IF NOT EXISTS users (
  id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  full_name  VARCHAR(100) NOT NULL,
  email      VARCHAR(100) NOT NULL UNIQUE,
  password   VARCHAR(255) NOT NULL,
  role_id    BIGINT NOT NULL,
  is_active  BOOLEAN NOT NULL DEFAULT TRUE,
  CONSTRAINT fk_users_roles
    FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE RESTRICT
);
-- CANDIDATES
CREATE TABLE IF NOT EXISTS candidates (
  id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  full_name        VARCHAR(100) NOT NULL,
  email            VARCHAR(100) UNIQUE,
  phone            VARCHAR(20),
  primary_skills   TEXT,
  secondary_skills TEXT,
  experience       NUMERIC(4,1),
  qualification    VARCHAR(100),
  designation      VARCHAR(100),
  notice_period    INT,
  location         VARCHAR(100)
);


CREATE TABLE IF NOT EXISTS interviews (
    id               BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    candidate_id     BIGINT NOT NULL,
    assigned_user_id BIGINT,
    scheduled_time   TIMESTAMP WITH TIME ZONE NOT NULL,
    status           VARCHAR(20) DEFAULT 'TECH_SCHEDULED',
    tech_rating      INT,
    hr_rating        INT,

    CONSTRAINT fk_interviews_candidates
        FOREIGN KEY (candidate_id) REFERENCES candidates(id) ON DELETE CASCADE,
    CONSTRAINT fk_interviews_assigned_user
        FOREIGN KEY (assigned_user_id) REFERENCES users(id) ON DELETE RESTRICT,
    CONSTRAINT ck_interviews_status
        CHECK (status IN (
            'TECH_SCHEDULED','TECH_COMPLETED',
            'HR_SCHEDULED','HR_COMPLETED',
            'SELECTED','REJECTED','CANCELLED'
        )),
    CONSTRAINT ck_interviews_tech_rating CHECK (tech_rating IS NULL OR tech_rating BETWEEN 1 AND 5),
    CONSTRAINT ck_interviews_hr_rating   CHECK (hr_rating IS NULL OR hr_rating BETWEEN 1 AND 5)
);
